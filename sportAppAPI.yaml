swagger: '2.0'
info:
  description: API of the Sport App
  version: 1.0.0
  title: Sport Event App

tags:
- name: user
  description: Endpoints connected to User
  
- name: event
  description: Endpoints connected to Event

paths:

  /user/register:
    post:
      tags:
      - user
      operationId: registerUser
      description: |
        Registers a new User on the website
      consumes:
      - application/json
      parameters:
      - in: body
        name: newUser
        schema:
          type: object
          properties:
            userName:
              type: string
            email:
              type: string
            fullName:
              type: string
            password:
              type: string
      responses:
        201:
          description: User registered successfully
        400:
          description: Invalid or missing information
        409:
          description: User already registered
        500:
          description: Server error

  /user/login:
    post:
      tags:
      - user
      operationId: loginUser
      description: |
        A User can login, if correct credentials are provided.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        200:
          description: Correct credentials, login successful
          headers:
            x-auth-token:
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/User'
        400:
          description: No or invalid credentials provided

  /user/me:
    get:
      tags:
      - user
      operationId: getCurrentUser
      description: |
        Gets the current logged in User
      produces:
      - application/json
      consumes:
      - header
      parameters:
      - in: header
        name: x-auth-token
        type: string
        required: true
      responses:
        200:
          description: Valid token provided
          schema:
            $ref: '#/definitions/User'
        401:
          description: No or invalid token provided
          
  /events/new:
    post:
      tags:
      - event
      operationId: registerEvent
      description: |
        Registers a new Event on website
      consumes:
      - application/json
      parameters:
      - in: body
        name: newEvent
        schema:
          type: object
          properties:
            sportname:
              type: string
            name:
              type: string
            location:
              type: string
            datetime:
              type: string
            description:
              type: string
              
      responses:
        201:
          description: Event registered successfully
        400:
          description: Invalid or missing information
        409:
          description: This sport category does not exist
        410:
          description: User is not found
        500:
          description: Server error

 
definitions:

  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
      userName:
        type: string
      email:
        type: string
      fullName:
        type: string
  
  Sport:
    type: object
    required:
    - id
    - name
    - minPlayers
    - maxPlayers
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      minPlayers:
        type: integer
        format: int32
      maxPlayers:
        type: integer
        format: int32
  
  Event:
    type: object
    properties:
      id:
        type: integer
        format: int32
      sport:
        $ref: '#/definitions/Sport'
      creator:
        $ref: '#/definitions/User'
      name:
        type: string
      location:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string

# Added by API Auto Mocking Plugin
# host: virtserver.swaggerhub.com
# basePath: /api
schemes:
 - https
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /api/
# Added by API Auto Mocking Plugin
basePath: /temalaborsport/sportAPI/1.0.0
